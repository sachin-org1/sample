name: Build

on: 
  push:
    branches: 
      - 'dev1'
    paths: 
      - '.github/workflows/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/main' && 'Prod' || 'Dev' }}
    steps:
      - uses: actions/checkout@v4
      - name: Build the App
        run: |
          echo "building the App D-v${{ github.run_number }}"
          echo "${{ vars.MYVARIABLE }}"
  
  tagthebuild:
    needs: build
    if: github.ref == 'refs/heads/dev1'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    environment: ${{ github.ref == 'refs/heads/main' && 'Stage' || 'Dev' }}

    steps: 
      - name: Check out the repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git with GitHub token
        run: |
          git config --global user.name "${{ github.actor }}"
          git remote set-url origin "https://github.com/${{ github.repository }}"

      - name: Create tag
        id: create-tag
        run: |
          git tag -a D-v${{ github.run_number }} -m "Dev Release v${{ github.run_number }}"
          git push --tags
      
      - name: Set Environment variable with Create Tag
        if: steps.create-tag.outcome == 'success'
        env:
          REPO_OWNER: ${{ github.repository_owner }}
          REPO_NAME:  ${{ github.repository }}
          SECRET_NAME: LAST_TAG_VERSION
          SECRET_VALUE: D-v${{ github.run_number }}
          GITHUB_TOKEN: ${{ github.token}}
        run: |
          echo "REPO OWNER : ${{ env.REPO_OWNER }}"
          echo "REPO NAME : ${{ env.REPO_NAME }}"
          echo "SECRET NAME : ${{ env.SECRET_NAME }}"
          echo "SECRET VALUE : ${{ env.SECRET_VALUE}}"
          echo "GITHUB TOKEN : ${{ env.GITHUB_TOKEN }}"

          curl -X PUT \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token $GITHUB_TOKEN" \
            -d "{\"encrypted_value\":\"$(echo -n "$SECRET_VALUE" | openssl enc -base64)\",\"key_id\":null}" \
            "https://api.github.com/repos/$REPO_OWNER/$REPO_NAME/actions/secrets/$SECRET_NAME"

          echo "SECRET VALUE : ${{ vars.SECRET_NAME }}"


